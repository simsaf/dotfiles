set-option -g default-terminal "tmux-256color"
set -as terminal-overrides ',st*:kind@:kri@'
bind r source-file ~/.tmux.conf \; display-message "Config reloaded"
bind R unbind -a \; source-file ~/.tmux.conf \; display-message "Config reloaded"
#set-option -g default-terminal "tmux-256color-italic"

# {{{-- display -------------------------------------------------------------------

set -g base-index 1         # start windows numbering at 1
setw -g pane-base-index 0   # make pane numbering consistent with windows

setw -g automatic-rename on # rename window to reflect current program
set -g renumber-windows on  # renumber windows when a window is closed

set -g set-titles on                        # set terminal title
set -g set-titles-string '#h $#S:@#I.%#W'

set -g display-panes-time 1500 # slightly longer pane indicators display time
set -g display-time 4000     # slightly longer status messages display time

set -gs escape-time 10        # time waiting escape key

set -g status-interval 60
set -g status-style fg=colour4,bg=colour0

#set -g window-active-style fg=colour7,bg=colour0  # current window
#set -g window-style fg=colour7,bg=colour232       # all window

set -g window-status-style          fg=colour4
set -g window-status-current-style  fg=colour7,bold
set -g window-status-bell-style     fg=colour0,bg=colour6
set -g window-status-activity-style fg=colour6,bold

set -g window-status-separator ''

set -g window-status-format '#[underscore]╱ #I:#T:#F #[default]╱'
set -g window-status-current-format '#[underscore]╱ #I:#T:#F #[default]╱'

set -g message-command-style fg=colour0,bg=colour4
set -g message-style fg=colour7,bg=colour4
# }}}
#{{{ The colour is one of: black, red, green, yellow, blue, magenta, cyan, white, aixterm bright
##	 variants (if supported: brightred, brightgreen, and so on), colour0 to colour255 from the
##	 256-colour set, default, or a hexadecimal RGB string such as ‘#ffffff’, which chooses the
##	 closest match from the default 256-colour set.
##
##	 The attributes is either none or a comma-delimited list of one or more of: bright (or bold),
##	 dim, underscore, blink, reverse, hidden, italics, or strikethrough to turn an attribute on, or
##	 an attribute prefixed with ‘no’ to turn one off.
##
##	 Examples are:
##		   fg=yellow,bold,underscore,blink
##		   bg=black,fg=default,noreverse
##	 With the -a flag to the set-option command the new style is added otherwise the existing style
##	 is replaced. }}}

set -g status-right '#[underscore]╱ #{session_id}:#{window_id}.#{pane_id} '
set -g status-left '#[underscore] #{session_name} #[default]╱'
set -g status-justify centre
set -g status on

#set-hook -g session-closed run-shell "~/sources/myShell/tmuxin.sh -rs"

# activityy {{{
#visual-activity [on | off | both]
#	 If on, display a message instead of sending a bell when activity occurs in a window for which
#	 the monitor-activity window option is enabled.  If set to both, a bell and a message are pro‐
#	 duced.
#
#visual-bell [on | off | both]
#	 If on, a message is shown on a bell in a window for which the monitor-bell window option is
#	 enabled instead of it being passed through to the terminal (which normally makes a sound).  If
#	 set to both, a bell and a message are produced.  Also see the bell-action option.
#
#visual-silence [on | off | both]
#	 If monitor-silence is enabled, prints a message after the interval has expired on a given win‐
#	 dow instead of sending a bell.  If set to both, a bell and a message are produced.
set -g monitor-activity on
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
#}}}

set -g pane-border-style fg=colour4
set -g pane-active-border-style fg=colour7
set -g pane-border-format '─'
bind C-q set pane-border-status
bind M-q set status


bind S  split-window -fv /home/simsaf/sources/myShell/tmuxin.sh
bind V  split-window -fh /home/simsaf/sources/myShell/tmuxin.sh
bind s  split-window -v
bind v  split-window -h
bind C  new-window /home/simsaf/sources/myShell/tmuxin.sh \; set status on
bind c  new-window \; set status on

unbind t # clock mode
bind t  new-session -ds 999 /home/simsaf/sources/myShell/tmuxin.sh          \;\
		swap-pane -t 999:0.0                                                \;\
		run-shell 'while [ -e /tmp/tmux-1000/tmuxin ] ; do sleep 0.1 ; done'\;\
		send-keys 'tmux swap-pane -t 999:0.0' C-m                           \;\
		run-shell 'sleep 0.5'                                               \;\
		kill-session -t 999
bind T  new-window -dt 999 /home/simsaf/sources/myShell/tmuxin.sh           \;\
		swap-pane -t :999.0                                                 \;\
		run-shell 'while [ -e /tmp/tmux-1000/tmuxin ] ; do sleep 0.1 ; done'\;\
		send-keys 'tmux swap-pane -t ${TMUXIN##*,}:999.0' C-m               \;\
		run-shell 'sleep 0.3'                                               \;\
		kill-window -t :999

bind-key  -T prefix g         set key-table "go"
	bind-key  -rT go     a         next-window -a \; set key-table "root"
	bind-key  -rT go     A         previous-window -a \; set key-table "root"
	bind-key  -rT go     Escape    set key-table "root"
#bind-key  -T prefix g         switch-client -Tgo
#	bind-key  -rTgo     a         next-window -a
#	bind-key  -rTgo     A         previous-window -a

bind-key  -rT root M-n         select-window -n
bind-key  -rT root M-p         select-window -p
bind-key  -rT prefix n         select-window -n
bind-key  -rT prefix p         select-window -p

bind-key  -r          N        swap-window -t +1
bind-key  -r          P        swap-window -t -1
bind-key  -r          S-NPage  swap-window -t +1
bind-key  -r          S-PPage  swap-window -t -1

# pane navigation {{{
bind  -r   h        select-pane  -L  #  move  left
bind  -r   j        select-pane  -D  #  move  down
bind  -r   k        select-pane  -U  #  move  up
bind  -r   l        select-pane  -R  #  move  right

#bind -rn M-Left 	if -F '#{pane_at_left}'\
#						'if "[ #{window_index} -ne $(tmux display -t:{start} -p \\#\\{window_index\\}) ]" \
#							"select-window -p \; set status on" \
#							"run-shell \"tmux -S \\$\\{TMUXIN%%,*\\} select-pane -t :.{left-of}\""' \
#						'select-pane  -t :.{left-of}'

bind -rn M-h\
	if -F '#{pane_at_left}'\
		'if -F "#{==:#{window_index},0}" \
			"select-pane -t #{TMUXIN}{left-of}" \
			"select-window -p \; set status on"' \
		'select-pane  -t :.{left-of}'
bind -rn M-j                        \
	if -F '#{pane_at_bottom}'       \
		'select-window -n'          \
		'select-pane  -t :.{down-of}'
bind -rn M-k                        \
	if -F '#{pane_at_top}'          \
		'select-window -p'          \
		'select-pane  -t :.{up-of}'
bind -rn M-l                        \
	if -F '#{pane_at_right}'\
		'if -F "#{==:#{window_index},#{session_windows}}" \
			"select-pane -t #{TMUXIN}{right-of}" \
			"select-window -n \; set status on"' \
		'select-pane  -t :.{right-of}'
	if -F '#{pane_at_right}'        \
		'if "[ #{window_index} -ne $(tmux display -t:{end} -p \\#\\{window_index\\}) ]" \
			"select-window -n \; set status on" \
			"run-shell \"tmux select-pane -t #{TMUXIN}{right-of} || true\""' \
		'select-pane  -t :.{right-of}'
bind -rn M-Left 	if -F '#{pane_at_left}'\
						'if "[ #{window_index} -ne $(tmux display -t:{start} -p \\#\\{window_index\\}) ]" \
							"select-window -p \; set status on" \
							"run-shell \"tmux select-pane -t #{TMUXIN}{left-of} || true\""' \
						'select-pane  -t :.{left-of}'
bind -rn M-Down 	if -F '#{pane_at_bottom}'       \
						'select-window -n'          \
						'select-pane  -t :.{down-of}'
bind -rn M-Up   	if -F '#{pane_at_top}'          \
						'select-window -p'          \
						'select-pane  -t :.{up-of}'
bind -rn M-Right	if -F '#{pane_at_right}'\
						'if "[ #{window_index} -ne $(tmux display -t:{end} -p \\#\\{window_index\\}) ]" \
							"select-window -n \; set status on" \
							"run-shell \"tmux select-pane -t #{TMUXIN}{right-of} || true\""' \
						'select-pane  -t :.{right-of}'
#bind -rn M-NPage next-window
#bind -rn M-PPage previous-window
#}}}
# pane resizing {{{
bind   -r  C-h       resize-pane   -L   2
bind   -r  C-j       resize-pane   -D   2
bind   -r  C-k       resize-pane   -U   2
bind   -r  C-l       resize-pane   -R   2
bind   -r  C-Left    resize-pane   -L   2
bind   -r  C-Down    resize-pane   -D   2
bind   -r  C-Up      resize-pane   -U   2
bind   -r  C-Right   resize-pane   -R   2
#}}}
#pane move {{{
#bind   -r   H        select-pane -m \; select-pane -L \; swap-pane \; select-pane -M \; select-pane -L
#bind   -r   H        swap-pane -s :.{left-of}
#bind   -r   H        split-window -hbfd 'sleep 0.1 ; exit' \; move-pane -vt :.{left-of} 

bind   -r   H\
	if -F "#{&&:#{==:#{pane_height},#{window_height}},#{pane_at_left}}"\
		"join-pane -h -t :{previous}"\
		"split-window -hbfd 'sleep 0.1 && exit' \; move-pane -vt :.{left-of}"
bind   -r   J\
	if -F "#{&&:#{==:#{pane_width},#{window_width}},#{pane_at_bottom}}"\
		"join-pane -v -t :{previous}"\
		"split-window -vfd 'sleep 0.1 && exit' \; move-pane -ht :.{down-of}"
bind   -r   K\
	if -F "#{&&:#{==:#{pane_width},#{window_width}},#{pane_at_top}}"\
		"join-pane -v -t :{next}"\
		"split-window -vbfd 'sleep 0.1 && exit' \; move-pane -ht :.{up-of}"
bind   -r   L\
	if -F "#{&&:#{==:#{pane_height},#{window_height}},#{pane_at_right}}"\
		"join-pane -h -t :{next}"\
		"split-window -hfd 'sleep 0.1 && exit' \; move-pane -vt :.{right-of}"

bind   -r   S-Left \
	if -F "#{&&:#{==:#{pane_height},#{window_height}},#{pane_at_left}}"\
		"join-pane -h -t :{previous}"\
		"split-window -hbfd 'sleep 0.1 && exit' \; move-pane -vt :.{left-of}"
bind   -r   S-Down \
	if -F "#{&&:#{==:#{pane_width},#{window_width}},#{pane_at_bottom}}"\
		"join-pane -v -t :{previous}"\
		"split-window -vfd 'sleep 0.1 && exit' \; move-pane -ht :.{down-of}"
bind   -r   S-Up   \
	if -F "#{&&:#{==:#{pane_width},#{window_width}},#{pane_at_top}}"\
		"join-pane -v -t :{next}"\
		"split-window -vbfd 'sleep 0.1 && exit' \; move-pane -ht :.{up-of}"
bind   -r   S-Right\
	if -F "#{&&:#{==:#{pane_height},#{window_height}},#{pane_at_right}}"\
		"join-pane -h -t :{next}"\
		"split-window -hfd 'sleep 0.1 && exit' \; move-pane -vt :.{right-of}"
#}}}

bind  F set key-table "fonts"
	bind -Tfonts 1  run-shell "echo 1 > ~/.fonts/#{b:client_tty}" \; set key-table "root"
	bind -Tfonts 2  run-shell "echo 2 > ~/.fonts/#{b:client_tty}" \; set key-table "root"

bind b list-buffers  # list paste buffers
#bind p paste-buffer  # paste from the top paste buffer
unbind ]
unbind '"'
bind B choose-buffer # choose which buffer to paste from
bind '"' run-shell '~/.tmux_plugins/clipboard_panel.sh'


unbind C-a
#set -q prefix C-b

bind-key u capture-pane -J -b urlview \; split-window -l 10 'tmux show-buffer | urlview'
bind-key U capture-pane -J -b urlview -S - \; split-window -l 10 'tmux show-buffer | urlview'
#bind-key u capture-pane -J -b urlview \; \
#    save-buffer -b urlview "/tmp/tmux_urlview" \; \
#    delete-buffer -b urlview \; \
#    split-window -l 10 "urlview '/tmp/tmux_urlview'"
#bind-key U capture-pane -J -S - -b urlview \; \
#    save-buffer -b urlview "/tmp/tmux_urlview" \; \
#    delete-buffer -b urlview \; \
#    split-window -l 10 "urlview '/tmp/tmux_urlview'"

#bind -Troot C-F12                      set -qg status on
#bind -Tback C-F12                      set -qg status on
#bind -Troot C-F11                      set -qg status off
#bind -Tback C-F11                      set -qg status off

#bind -Troot M-a     send-keys C-F12 \; set     status off \; set key-table "back" \; set -q prefix C-a
bind -Troot M-a                        set     status off \; set key-table "back" \; set -q prefix C-a
#
#bind -Tback M-z     send-keys C-F11 \; set     status on  \; set key-table "root" \; set -q prefix C-b
bind -Tback M-z                        set     status on  \; set key-table "root" \; set -q prefix C-b

#set update-environment[7] "TMUXIN"

#if -b 'command -v xsel > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xsel -i -b"'
#if -b '! command -v xsel > /dev/null 2>&1 && command -v xclip > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xclip -i -selection clipboard >/dev/null 2>&1"'
#bind -n z display-message "U ZXeded"

#set activity-action other
#set assume-paste-time 1
#set base-index 0
#set bell-action any
#set default-command ""
#set default-shell "/bin/zsh"
#set destroy-unattached off
#set detach-on-destroy on
#set display-panes-active-colour red
#set display-panes-colour blue
#set display-panes-time 800
#set display-time 1000
#set history-limit 2000
#set key-table "root"
#set lock-after-time 0
#set lock-command "lock -np"
#set message-command-style fg=yellow,bg=black
#set message-style fg=black,bg=yellow
#set mouse off
#set prefix C-b
#set prefix2 None
#set renumber-windows off
#set repeat-time 500
#set set-titles off
#set set-titles-string "#h ❐ #S ● #I #W"
#set silence-action other
#set status on
#set status-interval 60
#set status-justify centre
#set status-keys vi
#set status-left "[#S] "
#set status-left-length 10
#set status-left-style default
#set status-position bottom
#set status-right "%H:%M "
#set status-right-length 40
#set status-right-style default
#set status-style fg=blue
#set update-environment[0] "DISPLAY"
#set update-environment[1] "SSH_ASKPASS"
#set update-environment[2] "SSH_AUTH_SOCK"
#set update-environment[3] "SSH_AGENT_PID"
#set update-environment[4] "SSH_CONNECTION"
#set update-environment[5] "WINDOWID"
#set update-environment[6] "XAUTHORITY"
#set word-separators " -_@"
#bind-key    -T copy-mode    C-Space           send-keys -X begin-selection
#bind-key    -T copy-mode    C-a               send-keys -X start-of-line
#bind-key    -T copy-mode    C-b               send-keys -X cursor-left
#bind-key    -T copy-mode    C-c               send-keys -X cancel
#bind-key    -T copy-mode    C-e               send-keys -X end-of-line
#bind-key    -T copy-mode    C-f               send-keys -X cursor-right
#bind-key    -T copy-mode    C-g               send-keys -X clear-selection
#bind-key    -T copy-mode    C-k               send-keys -X copy-end-of-line
#bind-key    -T copy-mode    C-n               send-keys -X cursor-down
#bind-key    -T copy-mode    C-p               send-keys -X cursor-up
#bind-key    -T copy-mode    C-r               command-prompt -i -I "#{pane_search_string}" -p "(search up)" "send -X search-backward-incremental \"%%%\""
#bind-key    -T copy-mode    C-s               command-prompt -i -I "#{pane_search_string}" -p "(search down)" "send -X search-forward-incremental \"%%%\""
#bind-key    -T copy-mode    C-v               send-keys -X page-down
#bind-key    -T copy-mode    C-w               send-keys -X copy-selection-and-cancel
#bind-key    -T copy-mode    Escape            send-keys -X cancel
#bind-key    -T copy-mode    Space             send-keys -X page-down
#bind-key    -T copy-mode    ,                 send-keys -X jump-reverse
#bind-key    -T copy-mode    ;                 send-keys -X jump-again
#bind-key    -T copy-mode    F                 command-prompt -1 -p "(jump backward)" "send -X jump-backward \"%%%\""
#bind-key    -T copy-mode    N                 send-keys -X search-reverse
#bind-key    -T copy-mode    R                 send-keys -X rectangle-toggle
#bind-key    -T copy-mode    T                 command-prompt -1 -p "(jump to backward)" "send -X jump-to-backward \"%%%\""
#bind-key    -T copy-mode    f                 command-prompt -1 -p "(jump forward)" "send -X jump-forward \"%%%\""
#bind-key    -T copy-mode    g                 command-prompt -p "(goto line)" "send -X goto-line \"%%%\""
#bind-key    -T copy-mode    n                 send-keys -X search-again
#bind-key    -T copy-mode    q                 send-keys -X cancel
#bind-key    -T copy-mode    t                 command-prompt -1 -p "(jump to forward)" "send -X jump-to-forward \"%%%\""
#bind-key    -T copy-mode    MouseDown1Pane    select-pane
#bind-key    -T copy-mode    MouseDrag1Pane    select-pane ; send-keys -X begin-selection
#bind-key    -T copy-mode    MouseDragEnd1Pane send-keys -X copy-selection-and-cancel
#bind-key    -T copy-mode    WheelUpPane       select-pane ; send-keys -X -N 5 scroll-up
#bind-key    -T copy-mode    WheelDownPane     select-pane ; send-keys -X -N 5 scroll-down
#bind-key    -T copy-mode    DoubleClick1Pane  select-pane ; send-keys -X select-word
#bind-key    -T copy-mode    TripleClick1Pane  select-pane ; send-keys -X select-line
#bind-key    -T copy-mode    Home              send-keys -X start-of-line
#bind-key    -T copy-mode    End               send-keys -X end-of-line
#bind-key    -T copy-mode    NPage             send-keys -X page-down
#bind-key    -T copy-mode    PPage             send-keys -X page-up
#bind-key    -T copy-mode    Up                send-keys -X cursor-up
#bind-key    -T copy-mode    Down              send-keys -X cursor-down
#bind-key    -T copy-mode    Left              send-keys -X cursor-left
#bind-key    -T copy-mode    Right             send-keys -X cursor-right
#bind-key    -T copy-mode    M-1               command-prompt -N -I 1 -p (repeat) "send -N \"%%%\""
#bind-key    -T copy-mode    M-2               command-prompt -N -I 2 -p (repeat) "send -N \"%%%\""
#bind-key    -T copy-mode    M-3               command-prompt -N -I 3 -p (repeat) "send -N \"%%%\""
#bind-key    -T copy-mode    M-4               command-prompt -N -I 4 -p (repeat) "send -N \"%%%\""
#bind-key    -T copy-mode    M-5               command-prompt -N -I 5 -p (repeat) "send -N \"%%%\""
#bind-key    -T copy-mode    M-6               command-prompt -N -I 6 -p (repeat) "send -N \"%%%\""
#bind-key    -T copy-mode    M-7               command-prompt -N -I 7 -p (repeat) "send -N \"%%%\""
#bind-key    -T copy-mode    M-8               command-prompt -N -I 8 -p (repeat) "send -N \"%%%\""
#bind-key    -T copy-mode    M-9               command-prompt -N -I 9 -p (repeat) "send -N \"%%%\""
#bind-key    -T copy-mode    M-<               send-keys -X history-top
#bind-key    -T copy-mode    M->               send-keys -X history-bottom
#bind-key    -T copy-mode    M-R               send-keys -X top-line
#bind-key    -T copy-mode    M-b               send-keys -X previous-word
#bind-key    -T copy-mode    M-f               send-keys -X next-word-end
#bind-key    -T copy-mode    M-m               send-keys -X back-to-indentation
#bind-key    -T copy-mode    M-r               send-keys -X middle-line
#bind-key    -T copy-mode    M-v               send-keys -X page-up
#bind-key    -T copy-mode    M-w               send-keys -X copy-selection-and-cancel
#bind-key    -T copy-mode    M-{               send-keys -X previous-paragraph
#bind-key    -T copy-mode    M-}               send-keys -X next-paragraph
#bind-key    -T copy-mode    M-Up              send-keys -X halfpage-up
#bind-key    -T copy-mode    M-Down            send-keys -X halfpage-down
#bind-key    -T copy-mode    C-Up              send-keys -X scroll-up
#bind-key    -T copy-mode    C-Down            send-keys -X scroll-down

# copy-mode-vi {{{
bind -Troot         S-PPage copy-mode -u
bind -Troot         S-NPage copy-mode -u
bind -Tcopy-mode-vi y       send-keys -X copy-selection-and-cancel \; run -b "tmux show-buffer | xsel -i -b"
bind -Tcopy-mode-vi S-Up    send-keys -X select-line
bind -Tcopy-mode-vi S-Down  send-keys -X select-line
bind -Tcopy-mode-vi S-NPage send-keys -X page-down
bind -Tcopy-mode-vi S-PPage send-keys -X page-up

bind-key    -T copy-mode-vi C-b               send-keys -X page-up
bind-key    -T copy-mode-vi C-c               send-keys -X cancel
bind-key    -T copy-mode-vi C-d               send-keys -X halfpage-down
bind-key    -T copy-mode-vi C-e               send-keys -X scroll-down
bind-key    -T copy-mode-vi C-f               send-keys -X page-down
bind-key    -T copy-mode-vi C-h               send-keys -X cursor-left
bind-key    -T copy-mode-vi C-j               send-keys -X copy-selection-and-cancel
bind-key    -T copy-mode-vi Enter             send-keys -X copy-selection-and-cancel
bind-key    -T copy-mode-vi C-u               send-keys -X halfpage-up
bind-key    -T copy-mode-vi C-v               send-keys -X rectangle-toggle
bind-key    -T copy-mode-vi C-y               send-keys -X scroll-up
bind-key    -T copy-mode-vi Escape            send-keys -X clear-selection
bind-key    -T copy-mode-vi Space             send-keys -X begin-selection
#bind-key    -T copy-mode-vi \$                send-keys -X end-of-line
bind-key    -T copy-mode-vi ,                 send-keys -X jump-reverse
bind-key    -T copy-mode-vi /                 command-prompt -p "(search down)" "send -X search-forward \"%%%\""
bind-key    -T copy-mode-vi 0                 send-keys -X start-of-line
bind-key    -T copy-mode-vi 1                 command-prompt -N -I 1 -p (repeat) "send -N \"%%%\""
bind-key    -T copy-mode-vi 2                 command-prompt -N -I 2 -p (repeat) "send -N \"%%%\""
bind-key    -T copy-mode-vi 3                 command-prompt -N -I 3 -p (repeat) "send -N \"%%%\""
bind-key    -T copy-mode-vi 4                 command-prompt -N -I 4 -p (repeat) "send -N \"%%%\""
bind-key    -T copy-mode-vi 5                 command-prompt -N -I 5 -p (repeat) "send -N \"%%%\""
bind-key    -T copy-mode-vi 6                 command-prompt -N -I 6 -p (repeat) "send -N \"%%%\""
bind-key    -T copy-mode-vi 7                 command-prompt -N -I 7 -p (repeat) "send -N \"%%%\""
bind-key    -T copy-mode-vi 8                 command-prompt -N -I 8 -p (repeat) "send -N \"%%%\""
bind-key    -T copy-mode-vi 9                 command-prompt -N -I 9 -p (repeat) "send -N \"%%%\""
bind-key    -T copy-mode-vi :                 command-prompt -p "(goto line)" "send -X goto-line \"%%%\""
bind-key    -T copy-mode-vi \;                send-keys -X jump-again
bind-key    -T copy-mode-vi ?                 command-prompt -p "(search up)" "send -X search-backward \"%%%\""
bind-key    -T copy-mode-vi A                 send-keys -X append-selection-and-cancel
bind-key    -T copy-mode-vi B                 send-keys -X previous-space
bind-key    -T copy-mode-vi D                 send-keys -X copy-end-of-line
bind-key    -T copy-mode-vi E                 send-keys -X next-space-end
bind-key    -T copy-mode-vi F                 command-prompt -1 -p "(jump backward)" "send -X jump-backward \"%%%\""
bind-key    -T copy-mode-vi G                 send-keys -X history-bottom
bind-key    -T copy-mode-vi H                 send-keys -X top-line
bind-key    -T copy-mode-vi J                 send-keys -X scroll-down
bind-key    -T copy-mode-vi K                 send-keys -X scroll-up
bind-key    -T copy-mode-vi L                 send-keys -X bottom-line
bind-key    -T copy-mode-vi M                 send-keys -X middle-line
bind-key    -T copy-mode-vi N                 send-keys -X search-reverse
bind-key    -T copy-mode-vi T                 command-prompt -1 -p "(jump to backward)" "send -X jump-to-backward \"%%%\""
bind-key    -T copy-mode-vi V                 send-keys -X select-line
bind-key    -T copy-mode-vi W                 send-keys -X next-space
bind-key    -T copy-mode-vi ^                 send-keys -X back-to-indentation
bind-key    -T copy-mode-vi b                 send-keys -X previous-word
bind-key    -T copy-mode-vi e                 send-keys -X next-word-end
bind-key    -T copy-mode-vi f                 command-prompt -1 -p "(jump forward)" "send -X jump-forward \"%%%\""
bind-key    -T copy-mode-vi g                 send-keys -X history-top
bind-key    -T copy-mode-vi h                 send-keys -X cursor-left
bind-key    -T copy-mode-vi j                 send-keys -X cursor-down
bind-key    -T copy-mode-vi k                 send-keys -X cursor-up
bind-key    -T copy-mode-vi l                 send-keys -X cursor-right
bind-key    -T copy-mode-vi n                 send-keys -X search-again
bind-key    -T copy-mode-vi o                 send-keys -X other-end
bind-key    -T copy-mode-vi q                 send-keys -X cancel
bind-key    -T copy-mode-vi t                 command-prompt -1 -p "(jump to forward)" "send -X jump-to-forward \"%%%\""
bind-key    -T copy-mode-vi v                 send-keys -X rectangle-toggle
bind-key    -T copy-mode-vi w                 send-keys -X next-word
bind-key    -T copy-mode-vi {                 send-keys -X previous-paragraph
bind-key    -T copy-mode-vi }                 send-keys -X next-paragraph
#bind-key    -T copy-mode-vi MouseDown1Pane    select-pane
#bind-key    -T copy-mode-vi MouseDrag1Pane    select-pane ; send-keys -X begin-selection
#bind-key    -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-selection-and-cancel
#bind-key    -T copy-mode-vi WheelUpPane       select-pane ; send-keys -X -N 5 scroll-up
#bind-key    -T copy-mode-vi WheelDownPane     select-pane ; send-keys -X -N 5 scroll-down
#bind-key    -T copy-mode-vi DoubleClick1Pane  select-pane ; send-keys -X select-word
#bind-key    -T copy-mode-vi TripleClick1Pane  select-pane ; send-keys -X select-line
bind-key    -T copy-mode-vi BSpace            send-keys -X cursor-left
bind-key    -T copy-mode-vi NPage             send-keys -X page-down
bind-key    -T copy-mode-vi PPage             send-keys -X page-up
bind-key    -T copy-mode-vi Up                send-keys -X cursor-up
bind-key    -T copy-mode-vi Down              send-keys -X cursor-down
bind-key    -T copy-mode-vi Left              send-keys -X cursor-left
bind-key    -T copy-mode-vi Right             send-keys -X cursor-right
bind-key    -T copy-mode-vi C-Up              send-keys -X scroll-up
bind-key    -T copy-mode-vi C-Down            send-keys -X scroll-down
#}}}

#bind-key    -T prefix       C-b               send-prefix
#bind-key    -T prefix       C-o               rotate-window
#bind-key    -T prefix       C-z               suspend-client
#bind-key    -T prefix       Space             next-layout
#bind-key    -T prefix       !                 break-pane
#bind-key    -T prefix       "                 split-window
#bind-key    -T prefix       #                 list-buffers
#bind-key    -T prefix       $                 command-prompt -I "#S" "rename-session '%%'"
#bind-key    -T prefix       %                 split-window -h
#bind-key    -T prefix       &                 confirm-before -p "kill-window #W? (y/n)" kill-window
#bind-key    -T prefix       '                 command-prompt -p index "select-window -t ':%%'"
#bind-key    -T prefix       (                 switch-client -p
#bind-key    -T prefix       )                 switch-client -n
#bind-key    -T prefix       ,                 command-prompt -I "#W" "rename-window '%%'"
#bind-key    -T prefix       -                 delete-buffer
#bind-key    -T prefix       .                 command-prompt "move-window -t '%%'"
#bind-key    -T prefix       0                 select-window -t :=0
#bind-key    -T prefix       1                 select-window -t :=1
#bind-key    -T prefix       2                 select-window -t :=2
#bind-key    -T prefix       3                 select-window -t :=3
#bind-key    -T prefix       4                 select-window -t :=4
#bind-key    -T prefix       5                 select-window -t :=5
#bind-key    -T prefix       6                 select-window -t :=6
#bind-key    -T prefix       7                 select-window -t :=7
#bind-key    -T prefix       8                 select-window -t :=8
#bind-key    -T prefix       9                 select-window -t :=9
bind-key    -T prefix       :                 command-prompt
#bind-key    -T prefix       ;                 last-pane
#bind-key    -T prefix       =                 choose-buffer
#bind-key    -T prefix       >                 swap-pane -D
#bind-key    -T prefix       ?                 list-keys
#bind-key    -T prefix       D                 choose-client
#bind-key -r -T prefix       H                 resize-pane -L 2
#bind-key -r -T prefix       J                 resize-pane -D 2
#bind-key -r -T prefix       K                 resize-pane -U 2
#bind-key -r -T prefix       L                 resize-pane -R 2
bind-key    -T prefix       M                 select-pane -M
#bind-key    -T prefix       P                 choose-buffer
#bind-key    -T prefix       R                 unbind-key -a ; source-file /home/simsaf/.tmux.conf ; display-message "Config reloaded"
#bind-key    -T prefix       [                 copy-mode
#bind-key    -T prefix       ]                 paste-buffer
#bind-key    -T prefix       _                 set-option status
#bind-key    -T prefix       b                 list-buffers
#bind-key    -T prefix       c                 new-window
#bind-key    -T prefix       d                 detach-client
#bind-key    -T prefix       f                 command-prompt "find-window '%%'"
#bind-key -r -T prefix       h                 select-pane -L
bind-key    -T prefix       i                 display-message
#bind-key -r -T prefix       j                 select-pane -D
#bind-key -r -T prefix       k                 select-pane -U
#bind-key -r -T prefix       l                 select-pane -R
bind-key    -T prefix       m                 select-pane -m
#bind-key    -T prefix       n                 next-window
#bind-key    -T prefix       o                 select-pane -t :.+
#bind-key    -T prefix       q                 display-panes
#bind-key    -T prefix       r                 source-file /home/simsaf/.tmux.conf ; display-message "Config reloaded"
#bind-key    -T prefix       s                 split-window -v
#bind-key    -T prefix       t                 clock-mode
#bind-key    -T prefix       v                 split-window -h
bind-key    -T prefix       w                 choose-tree -w
#bind-key    -T prefix       x                 confirm-before -p "kill-pane #P? (y/n)" kill-pane
#bind-key    -T prefix       z                 resize-pane -Z
#bind-key    -T prefix       {                 swap-pane -U
#bind-key    -T prefix       }                 swap-pane -D
#bind-key    -T prefix       ~                 show-messages
#bind-key    -T prefix       PPage             copy-mode -u
bind-key -r -T prefix       Up                select-pane -U
bind-key -r -T prefix       Down              select-pane -D
bind-key -r -T prefix       Left              select-pane -L
bind-key -r -T prefix       Right             select-pane -R
#bind-key    -T prefix       M-1               select-layout even-horizontal
#bind-key    -T prefix       M-2               select-layout even-vertical
#bind-key    -T prefix       M-3               select-layout main-horizontal
#bind-key    -T prefix       M-4               select-layout main-vertical
#bind-key    -T prefix       M-5               select-layout tiled
#bind-key    -T prefix       M-n               next-window -a
#bind-key    -T prefix       M-o               rotate-window -D
#bind-key    -T prefix       M-p               previous-window -a
#bind-key -r -T prefix       M-Up              resize-pane -U 5
#bind-key -r -T prefix       M-Down            resize-pane -D 5
#bind-key -r -T prefix       M-Left            resize-pane -L 5
#bind-key -r -T prefix       M-Right           resize-pane -R 5
#bind-key -r -T prefix       C-Up              resize-pane -U
#bind-key -r -T prefix       C-Down            resize-pane -D
#bind-key -r -T prefix       C-Left            resize-pane -L
#bind-key -r -T prefix       C-Right           resize-pane -R
#bind-key    -T root         MouseDown1Pane    select-pane -t = ; send-keys -M
#bind-key    -T root         MouseDown1Status  select-window -t =
#bind-key    -T root         MouseDown3Pane    if-shell -F -t = "#{mouse_any_flag}" "select-pane -t=; send-keys -M" "select-pane -mt="
#bind-key    -T root         MouseDrag1Pane    if-shell -F -t = "#{mouse_any_flag}" "if -Ft= \"#{pane_in_mode}\" \"copy-mode -M\" \"send-keys -M\"" "copy-mode -M"
#bind-key    -T root         MouseDrag1Border  resize-pane -M
#bind-key    -T root         WheelUpPane       if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= \"#{pane_in_mode}\" \"send-keys -M\" \"copy-mode -et=\""
#bind-key    -T root         WheelUpStatus     previous-window
#bind-key    -T root         WheelDownStatus   next-window
#bind-key -r -T root         C-NPage           next-window
#bind-key -r -T root         C-PPage           previous-window
