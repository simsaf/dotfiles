let SessionLoad = 1
if &cp | set nocp | endif
let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
let v:this_session=expand("<sfile>:p")
silent only
cd ~/.vim
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
badd +1 ~/.vimrc
badd +27 colors/8bit_emulate.vim
badd +0 /usr/share/vim/vim80/doc/syntax.txt
badd +249 bundle/tlib_vim/doc/tlib.txt
argglobal
silent! argdel *
edit ~/.vimrc
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
set nosplitbelow
set nosplitright
wincmd t
set winminheight=1 winheight=1 winminwidth=1 winwidth=1
exe 'vert 1resize ' . ((&columns * 103 + 104) / 208)
exe 'vert 2resize ' . ((&columns * 104 + 104) / 208)
argglobal
setlocal fdm=marker
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
53
normal! zo
345
normal! zo
let s:l = 348 - ((347 * winheight(0) + 32) / 64)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
348
normal! 057|
lcd ~/
wincmd w
argglobal
if bufexists('/usr/share/vim/vim80/doc/syntax.txt') | buffer /usr/share/vim/vim80/doc/syntax.txt | else | edit /usr/share/vim/vim80/doc/syntax.txt | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal nofen
silent! normal! zE
let s:l = 4599 - ((2 * winheight(0) + 32) / 64)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
4599
normal! 0
lcd ~/
wincmd w
exe 'vert 1resize ' . ((&columns * 103 + 104) / 208)
exe 'vert 2resize ' . ((&columns * 104 + 104) / 208)
tabnext 1
if exists('s:wipebuf')
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20 shortmess=filnxtToO
set winminheight=0 winminwidth=1
let s:sx = expand("<sfile>:p:r")."x.vim"
if file_readable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &so = s:so_save | let &siso = s:siso_save
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
